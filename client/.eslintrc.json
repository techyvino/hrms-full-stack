{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint",
    "@typescript-eslint/eslint-plugin",
    "unused-imports",
    "tailwindcss",
    "simple-import-sort"
  ],
  "extends": [
    "next/core-web-vitals",
    "next/typescript",
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
    "plugin:tailwindcss/recommended"
  ],
  "rules": {
    "tailwindcss/no-custom-classname": ["off"], // Allow custom class names (not restricted to Tailwind)
    "import/no-extraneous-dependencies": "warn", // Warn about extraneous dependencies in TypeScript files
    "no-param-reassign": "warn", // Allow parameter reassignment
    "no-empty-pattern": "warn", // Allow empty destructuring patterns
    "no-use-before-define": "warn", // Disable "use before define" for all variables and functions
    "no-shadow": "warn", // Disable shadowed variable rule
    "@typescript-eslint/no-shadow": "warn", // Disable shadowed variable rule for TypeScript
    "@typescript-eslint/no-use-before-define": "warn", // Disable "use before define" for TypeScript
    "import/extensions": "warn", // Disable import extensions requirement (TypeScript handles this)
    "react/destructuring-assignment": "warn", // Disable mandatory destructuring in React components
    "react/no-unstable-nested-components": "warn", // Allow unstable nested components (needed by i18n library)
    "@typescript-eslint/consistent-type-imports": "error", // Enforce consistent usage of `import type`
    "no-restricted-syntax": [
      "error",
      "ForInStatement", // Disallow `for-in` loops
      "LabeledStatement", // Disallow labeled statements
      "WithStatement" // Disallow `with` statements
    ], // Override Airbnb configuration to restrict specific syntax
    "import/prefer-default-export": "off", // Allow named exports without preferring default exports
    "simple-import-sort/imports": "error", // Enforce sorted imports
    "simple-import-sort/exports": "error", // Enforce sorted exports
    "import/order": "off", // Disable import order rule to avoid conflict with simple-import-sort
    "@typescript-eslint/no-unused-vars": "off", // Disable unused variables rule for TypeScript
    "unused-imports/no-unused-imports": "error", // Automatically remove unused imports
    "no-unused-vars": "off", // Disable unused variables rule (covered by unused-imports plugin)
    "unused-imports/no-unused-vars": [
      "warn",
      {
        "vars": "all", // Warn for all unused variables
        "varsIgnorePattern": "^_", // Ignore variables starting with an underscore
        "args": "after-used", // Only warn about unused arguments if they appear after used ones
        "argsIgnorePattern": "^_" // Ignore arguments starting with an underscore
      }
    ],
    "@typescript-eslint/no-explicit-any": "warn"
  },
  "overrides": [
    {
      "files": ["app/**/*.{js,ts,tsx}"],
      "parser": "@typescript-eslint/parser",
      "plugins": ["@typescript-eslint"]
    }
  ]
}
